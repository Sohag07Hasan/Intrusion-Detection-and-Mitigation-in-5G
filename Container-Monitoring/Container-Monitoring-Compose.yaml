version: '3.8'

services:

  grafana:
    container_name: grafana
    image: grafana/grafana:10.0.3
    ports:
      - 3005:3000
    volumes:
      - ./config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana-data:/var/lib/grafana
    environment:
    - GF_SECURITY_ADMIN_USER=new_admin
    - GF_SECURITY_ADMIN_PASSWORD=admin
    - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=1s ##make grafana refresh rate to 1 seconds
  
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.46.0
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/recording_rules.yml:/etc/prometheus/recording_rules.yml
      - prom-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=30GB'
      - '--storage.tsdb.min-block-duration=1h'
      - '--storage.tsdb.max-block-duration=12h'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    # expose:
    #   - 8080
    ports:
      - "8080:8080"  # Bind cAdvisor's port 8080 to the host machine
    command:
      - "--housekeeping_interval=1s" # Align data collection frequency with Prometheus scrape interval
      - "--disable_metrics=cpu,memory,disk,percpu"  # Disable CPU, memory, and disk metrics
      - "--docker_only" ## docker container only


  #collect node metrics
  nodeexporter:
    image: prom/node-exporter:v1.6.1
    expose:
      - 9100:9100


  ##influx db to make it faster
  influxdb:
    container_name: influxdb
    image: influxdb:2.7
    ports:
      - "8086:8086"  # Expose InfluxDB's HTTP API
    volumes:
      - influxdb-data:/var/lib/influxdb2  # Persistent storage
      - ./data/influxdb:/data
    environment:
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=adminpassword
      - INFLUXDB_BUCKET=real_time_metrics
      - INFLUXDB_ORG=myorg
      - INFLUXDB_INIT_MODE=setup


volumes:
  grafana-data:
  prom-data:
  influxdb-data: